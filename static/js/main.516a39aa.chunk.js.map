{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","movieTitle","movieDescription","movieImgUrl","movieImdbUrl","movieImdbId","handleSubmit","event","preventDefault","props","onAdd","setState","handleChange","target","name","value","this","onSubmit","type","onChange","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.516a39aa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    movieTitle: '',\n    movieDescription: '',\n    movieImgUrl: '',\n    movieImdbUrl: '',\n    movieImdbId: '',\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      movieTitle,\n      movieDescription,\n      movieImgUrl,\n      movieImdbUrl,\n      movieImdbId,\n    } = this.state;\n\n    this.props.onAdd(\n      movieTitle, movieDescription, movieImgUrl, movieImdbUrl, movieImdbId,\n    );\n\n    this.setState({\n      movieTitle: '',\n      movieDescription: '',\n      movieImgUrl: '',\n      movieImdbUrl: '',\n      movieImdbId: '',\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      movieTitle,\n      movieDescription,\n      movieImgUrl,\n      movieImdbUrl,\n      movieImdbId,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        Title:\n        <input\n          type=\"text\"\n          className=\"d-block form-control w-50\"\n          name=\"movieTitle\"\n          value={movieTitle}\n          onChange={this.handleChange}\n        />\n        Description:\n        <input\n          type=\"text\"\n          className=\"d-block form-control w-50\"\n          name=\"movieDescription\"\n          value={movieDescription}\n          onChange={this.handleChange}\n        />\n        imgUrl:\n        <input\n          type=\"text\"\n          className=\"d-block form-control w-50\"\n          name=\"movieImgUrl\"\n          value={movieImgUrl}\n          onChange={this.handleChange}\n        />\n        imdbUrl:\n        <input\n          type=\"text\"\n          className=\"d-block form-control w-50\"\n          name=\"movieImdbUrl\"\n          value={movieImdbUrl}\n          onChange={this.handleChange}\n        />\n        imdbId:\n        <input\n          type=\"text\"\n          className=\"d-block form-control w-50\"\n          name=\"movieImdbId\"\n          value={movieImdbId}\n          onChange={this.handleChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary mt-2\"\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}